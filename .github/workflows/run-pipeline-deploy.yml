name: Pipeline Deploy ECS

on:
  push:
    branches:
      - develop

jobs:
  unit-tests:
    name: Unit Tests  
    uses: ./.github/workflows/run-unit-tests.yml
  
  integration-tests:
    name: Integration Tests  
    uses: ./.github/workflows/run-integration-tests.yml
    secrets:
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

  # deploy-backend:
  #   name: Deploy Backend Code on AWS ECS
  #   needs: tests
  #   runs-on: ubuntu-latest
  #   defaults: 
  #     run:
  #       working-directory: 'services/api'

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3
      
  #     - name: Setup AWS CLI
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #           aws-region: ${{ secrets.AWS_REGION }}

  #     - name: Login on Amazon ECR
  #       run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

  #     - name: Build Docker Image
  #       run: docker-build -t img-be-nodejs .

  #     - name: Tag Docker Image
  #       run: VERSION=$(date +%Y%m%d%H%M%S) docker tag img-be-nodejs ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/mvp-be-repo:$VERSION
      
  #     - name: Push Docker Image to Amazon ECR
  #       run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest
      
  #     # - name: Force Update on ECS
  #     #   run: aws ecs update-service --cluster mvpcluster --service backend --force-new-deployment
