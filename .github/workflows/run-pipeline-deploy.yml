name: Pipeline Deploy ECS

on:
  push:
    branches:
      - develop

jobs:
  unit-tests:
    name: Unit Tests  
    uses: ./.github/workflows/run-unit-tests.yml
  
  integration-tests:
    name: Integration Tests  
    uses: ./.github/workflows/run-integration-tests.yml
    secrets:
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

  applytf:
        runs-on: ubuntu-latest
        name: "Apply TF"
        permissions:
            pull-requests: write
            contents: read
        defaults:
            run:
                working-directory: ./terraform/04_repository
        steps:
            - uses: actions/checkout@v3
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
            - name: Terraform Init
              id: init
              run: terraform init
            - name: Terraform apply
              run: terraform apply -auto-approve -input=false

  deploy-backend:
    name: Deploy Backend Code on AWS ECS
    needs: [unit-tests, integration-tests, applytf]
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: 'services/api'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Bump version and Push Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: "master,develop"
      
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

      - name: Login on Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Build, Tag and Push Image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mvp-be-repo
          IMAGE_TAG: ${{ steps.tag_version.outputs.new_version  }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
  #     # - name: Force Update on ECS
  #     #   run: aws ecs update-service --cluster mvpcluster --service backend --force-new-deployment
