name: Pipeline Deploy ECS

on:
  push:
    branches:
      - develop

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

jobs:
  unit-tests:
    name: Unit Tests  
    uses: ./.github/workflows/run-unit-tests.yml
  
  integration-tests:
    name: Integration Tests  
    uses: ./.github/workflows/run-integration-tests.yml
    secrets:
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

  build-backend:
    name: Build Node Package
    needs: [unit-tests, integration-tests]
    uses: ./.github/workflows/run-build-backend.yml

  deploy-backend:
    name: Deploy Backend Code on AWS ECS
    needs: [build-backend]
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: 'services/api'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

      - name: Login on Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag and Push Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mvp-be-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  #     # - name: Force Update on ECS
  #     #   run: aws ecs update-service --cluster mvpcluster --service backend --force-new-deployment
